#:local queueName "$leaseActMAC";

:if ($leaseBound = "1") do={
    # Retrieve hostname
    :local hostName [/ip dhcp-server lease get [find where active-mac-address=$leaseActMAC && active-address=$leaseActIP] host-name];

    # Retrieve device port
    :local devicePort "Unknown";
    /interface bridge host
    :local searchResult [find where mac-address=$leaseActMAC];
    :if ([:len $searchResult] > 0) do={
        :set devicePort [get $searchResult on-interface];
    } else={
        /ip arp
        :set searchResult [find where mac-address=$leaseActMAC];
        :if ([:len $searchResult] > 0) do={
            :set devicePort [get $searchResult interface];
        }
    }

    # Match the device IP with firewall address lists
    :local addressList "None";
    :foreach list in=[/ip firewall address-list find where address=$leaseActIP] do={
        :set addressList [/ip firewall address-list get $list list];
    }

    # Construct the comment in the required format
#    :local queueComment ("[" . $addressList . "] " . $devicePort . " : " . $hostName);
    :local queueName ("[" . $addressList . "] " . $devicePort . " : " . $hostName);
	:local queueComment "$leaseActMAC";

    # Add or update the queue
    :if ([:len [/queue simple find name=$queueName]] > 0) do={
        /queue simple set [find name=$queueName] max-limit=32M/32M comment=$queueComment;
    } else={
        /queue simple add name=$queueName target=($leaseActIP . "/32") max-limit=32M/32M comment=$queueComment;
    }
} else={
    # Lease is unbound, check for the queue with the MAC address in the comment
    :foreach queue in [/queue simple find] do={
        :local currentComment [/queue simple get $queue comment];
        :if ($currentComment = "$leaseActMAC") do={
            :log info ("Removing queue with comment MAC: " . $leaseActMAC);
            /queue simple remove $queue;
        }
    }
}


